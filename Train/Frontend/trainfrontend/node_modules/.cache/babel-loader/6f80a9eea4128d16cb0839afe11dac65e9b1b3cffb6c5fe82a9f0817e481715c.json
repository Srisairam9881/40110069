{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\Sri Sai Ram\\\\VS Files\\\\Frontend-Projects\\\\Train\\\\Frontend\\\\trainfrontend\\\\src\\\\TrainRegistration .jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrainRegistration = () => {\n  _s();\n  const [companyName, setCompanyName] = useState('');\n  const [ownerName, setOwnerName] = useState('');\n  const [rollNo, setRollNo] = useState('');\n  const [ownerEmail, setOwnerEmail] = useState('');\n  const [accessCode, setAccessCode] = useState('');\n  const [clientID, setClientID] = useState('');\n  const [clientSecret, setClientSecret] = useState('');\n  const [accessToken, setAccessToken] = useState('');\n  useEffect(() => {\n    // Fetch access token after registration\n    if (clientID && clientSecret) {\n      authenticate();\n    }\n  }, [clientID, clientSecret]);\n  const authenticate = () => {\n    const authUrl = 'http://104.211.219.98/train/auth';\n    const authPayload = {\n      companyName,\n      clientID,\n      ownerName,\n      ownerEmail,\n      rollNo,\n      clientSecret\n    };\n    axios.post(authUrl, authPayload).then(response => {\n      if (response.status === 200) {\n        const {\n          access_token\n        } = response.data;\n        setAccessToken(access_token);\n        console.log('Authentication successful!');\n      } else {\n        console.log('Authentication failed with status code:', response.status);\n      }\n    }).catch(error => {\n      console.log('Error occurred during authentication:', error);\n    });\n  };\n  const handleRegister = () => {\n    if (clientID && clientSecret) {\n      console.log('Already registered.');\n      return;\n    }\n    const registerUrl = 'http://104.211.219.98/train/register';\n    const registerPayload = {\n      companyName,\n      ownerName,\n      rollNo,\n      ownerEmail,\n      accessCode\n    };\n    axios.post(registerUrl, registerPayload).then(response => {\n      if (response.status === 200) {\n        const {\n          companyName,\n          clientID,\n          clientSecret\n        } = response.data;\n        setCompanyName(companyName);\n        setClientID(clientID);\n        setClientSecret(clientSecret);\n        console.log('Registration successful!');\n      } else {\n        console.log('Registration failed with status code:', response.status);\n      }\n    }).catch(error => {\n      console.log('Error occurred during registration:', error);\n    });\n  };\n  const getAllTrains = () => {\n    const trainsUrl = 'http://104.211.219.98/train/trains';\n    const headers = {\n      Authorization: `Bearer ${accessToken}`\n    };\n    axios.get(trainsUrl, {\n      headers\n    }).then(response => {\n      if (response.status === 200) {\n        const trainsData = response.data;\n        console.log('All Trains:');\n        console.log(trainsData);\n      } else {\n        console.log('Failed to get train details with status code:', response.status);\n      }\n    }).catch(error => {\n      console.log('Error occurred while getting train details:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Train Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRegister,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getAllTrains,\n      children: \"Get All Trains\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(TrainRegistration, \"vC4E7wKV8RXs0Bx3Asie0C27EFM=\");\n_c = TrainRegistration;\nexport default TrainRegistration;\nvar _c;\n$RefreshReg$(_c, \"TrainRegistration\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TrainRegistration","_s","companyName","setCompanyName","ownerName","setOwnerName","rollNo","setRollNo","ownerEmail","setOwnerEmail","accessCode","setAccessCode","clientID","setClientID","clientSecret","setClientSecret","accessToken","setAccessToken","authenticate","authUrl","authPayload","post","then","response","status","access_token","data","console","log","catch","error","handleRegister","registerUrl","registerPayload","getAllTrains","trainsUrl","headers","Authorization","get","trainsData","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Documents/Sri Sai Ram/VS Files/Frontend-Projects/Train/Frontend/trainfrontend/src/TrainRegistration .jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst TrainRegistration = () => {\r\n  const [companyName, setCompanyName] = useState('');\r\n  const [ownerName, setOwnerName] = useState('');\r\n  const [rollNo, setRollNo] = useState('');\r\n  const [ownerEmail, setOwnerEmail] = useState('');\r\n  const [accessCode, setAccessCode] = useState('');\r\n  const [clientID, setClientID] = useState('');\r\n  const [clientSecret, setClientSecret] = useState('');\r\n  const [accessToken, setAccessToken] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch access token after registration\r\n    if (clientID && clientSecret) {\r\n      authenticate();\r\n    }\r\n  }, [clientID, clientSecret]);\r\n\r\n  const authenticate = () => {\r\n    const authUrl = 'http://104.211.219.98/train/auth';\r\n    const authPayload = {\r\n      companyName,\r\n      clientID,\r\n      ownerName,\r\n      ownerEmail,\r\n      rollNo,\r\n      clientSecret\r\n    };\r\n\r\n    axios.post(authUrl, authPayload)\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          const { access_token } = response.data;\r\n          setAccessToken(access_token);\r\n          console.log('Authentication successful!');\r\n        } else {\r\n          console.log('Authentication failed with status code:', response.status);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log('Error occurred during authentication:', error);\r\n      });\r\n  };\r\n\r\n  const handleRegister = () => {\r\n    if (clientID && clientSecret) {\r\n      console.log('Already registered.');\r\n      return;\r\n    }\r\n\r\n    const registerUrl = 'http://104.211.219.98/train/register';\r\n    const registerPayload = {\r\n      companyName,\r\n      ownerName,\r\n      rollNo,\r\n      ownerEmail,\r\n      accessCode\r\n    };\r\n\r\n    axios.post(registerUrl, registerPayload)\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          const { companyName, clientID, clientSecret } = response.data;\r\n          setCompanyName(companyName);\r\n          setClientID(clientID);\r\n          setClientSecret(clientSecret);\r\n          console.log('Registration successful!');\r\n        } else {\r\n          console.log('Registration failed with status code:', response.status);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log('Error occurred during registration:', error);\r\n      });\r\n  };\r\n\r\n  const getAllTrains = () => {\r\n    const trainsUrl = 'http://104.211.219.98/train/trains';\r\n    const headers = {\r\n      Authorization: `Bearer ${accessToken}`\r\n    };\r\n\r\n    axios.get(trainsUrl, { headers })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          const trainsData = response.data;\r\n          console.log('All Trains:');\r\n          console.log(trainsData);\r\n        } else {\r\n          console.log('Failed to get train details with status code:', response.status);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log('Error occurred while getting train details:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Train Registration</h2>\r\n      {/* ... Input fields for registration details ... */}\r\n      <button onClick={handleRegister}>Register</button>\r\n      {/* ... Display registration details ... */}\r\n      <br />\r\n      <button onClick={getAllTrains}>Get All Trains</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrainRegistration;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}